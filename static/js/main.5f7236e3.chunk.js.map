{"version":3,"sources":["components/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","handleChange","paginate","useState","Array","from","length","_","i","items","setItems","indexOfLastPost","indexOfFirstPost","currentPosts","slice","visiblePages","totalPages","Math","ceil","startIndex","endIndex","splice","concat","getVisiblePages","useEffect","htmlFor","type","onChange","value","name","id","map","item","className","href","onClick","number","classNames","active","disabled","App","pageOptions","setPageOptions","e","target","prev","pageNumber","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f7236e3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport './Pagination.scss';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  page: number;\n  handleChange: (\n    e: React.ChangeEvent<HTMLInputElement & HTMLSelectElement>) => void;\n  paginate: (pageNumber: number) => void;\n};\n\nconst Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  page,\n  handleChange,\n  paginate,\n}) => {\n  const [items, setItems] = useState(\n    Array.from({ length: total }, (_, i) => i + 1),\n  );\n\n  const indexOfLastPost = page * perPage;\n  const indexOfFirstPost = indexOfLastPost - perPage;\n  const currentPosts = items.slice(indexOfFirstPost, indexOfLastPost);\n\n  function getVisiblePages() {\n    const dots = '...';\n    const totalPages = Array.from({\n      length: Math.ceil(total / perPage),\n    }, (_, i) => i + 1);\n\n    if (totalPages.length < 5) {\n      return totalPages;\n    }\n\n    const startIndex: (number | string)[] = totalPages.slice(0, page - 1);\n    const endIndex: (number | string)[] = totalPages.slice(page);\n    const result: (number | string)[] = [];\n\n    if (startIndex.length > 2) {\n      startIndex.splice(1, startIndex.length - 2, dots);\n    }\n\n    if (endIndex.length > 2) {\n      endIndex.splice(1, endIndex.length - 2, dots);\n    }\n\n    return result.concat(startIndex, page, endIndex);\n  }\n\n  const visiblePages = getVisiblePages();\n\n  useEffect(() => {\n    setItems(Array.from({ length: total }, (_, i) => i + 1));\n  }, [total]);\n\n  return (\n    <div>\n      <label htmlFor=\"total\">Total</label>\n      <input\n        type=\"text\"\n        onChange={handleChange}\n        value={total}\n        name=\"total\"\n      />\n      <label htmlFor=\"perPage\">Items per pege</label>\n      <select\n        name=\"perPage\"\n        id=\"perPage\"\n        value={perPage}\n        onChange={handleChange}\n      >\n        <option value=\"3\">3</option>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n      </select>\n      {currentPosts.map(item => (\n        <ul className=\"list-group\">\n          <li key={item} className=\"list-group-item\">{item}</li>\n        </ul>\n      ))}\n      <ul className=\"pagination mt-5\">\n        <li className={`page-item ${page - 1 < 1 ? 'disabled' : ''}`}>\n          <a\n            href=\"!#\"\n            className=\"page-link\"\n            onClick={() => paginate(page - 1)}\n          >\n            <span aria-hidden=\"true\">&laquo;</span>\n          </a>\n        </li>\n        {visiblePages.map(number => (\n          <li className=\"page-item\" key={number}>\n            <a\n              href=\"!#\"\n              className={classNames(\n                'page-link',\n                {\n                  active: page === number,\n                  disabled: typeof number !== 'number',\n                },\n              )}\n              onClick={() => paginate(+number)}\n            >\n              {number}\n            </a>\n          </li>\n        ))}\n        <li className={`page-item ${page + 1 > visiblePages.length ? 'disabled' : ''}`}>\n          <a\n            href=\"!#\"\n            className=\"page-link\"\n            onClick={() => paginate(page + 1)}\n          >\n            <span aria-hidden=\"true\">&raquo;</span>\n          </a>\n        </li>\n\n        <h2>\n          {`${indexOfFirstPost + 1} - ${indexOfLastPost < total ? indexOfLastPost : total} of ${total}`}\n        </h2>\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Pagination from './components/Pagination';\n\nconst App: React.FC = () => {\n  const [pageOptions, setPageOptions] = useState({\n    total: 42,\n    perPage: 5,\n    page: 1,\n  });\n\n  function handleChange(\n    e: React.ChangeEvent<HTMLInputElement & HTMLSelectElement>,\n  ) {\n    const { name, value } = e.target;\n\n    setPageOptions(prev => (\n      { ...prev, [name]: +value }\n    ));\n  }\n\n  function paginate(pageNumber: number) {\n    setPageOptions(prev => (\n      { ...prev, page: pageNumber }\n    ));\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-primary text-center mb-3\">Pagintation</h1>\n      <Pagination\n        total={pageOptions.total}\n        perPage={pageOptions.perPage}\n        page={pageOptions.page}\n        // eslint-disable-next-line\n        handleChange={handleChange}\n        // eslint-disable-next-line\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}